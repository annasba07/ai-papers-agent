# API Configuration
API_V1_STR=/api/v1
PROJECT_NAME=AI Paper Digest
PROJECT_VERSION=1.0.0

# Database Configuration
# Option 1: SQLite for basic development (no vector search)
# DATABASE_URL=sqlite:///./ai_paper_digest.db

# Option 2: Supabase PostgreSQL (RECOMMENDED - supports pgvector for knowledge graph)
# Get from: https://app.supabase.com → Settings → Database → Connection string
SUPABASE_DATABASE_URL=postgresql://postgres:YOUR_PASSWORD@db.xxxxx.supabase.co:5432/postgres
DATABASE_URL=postgresql://postgres:YOUR_PASSWORD@db.xxxxx.supabase.co:5432/postgres

# Database connection pooling
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Redis Configuration (OPTIONAL - falls back to in-memory cache if unavailable)
# REDIS_URL=redis://localhost:6379
# REDIS_CACHE_TTL=86400

# AI Service Configuration
# Gemini API for paper analysis
# Get your API key from: https://makersuite.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here
GEMINI_MODEL=gemini-1.5-flash

# OpenAI API for embeddings (knowledge graph)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key_here

# Anthropic API for code generation (multi-agent system)
# Get from: https://console.anthropic.com/settings/keys
ANTHROPIC_API_KEY=sk-ant-your_anthropic_api_key_here

# GitHub API Configuration (OPTIONAL - for code detection feature)
# Get a token from: https://github.com/settings/tokens
# Permissions needed: public_repo (read-only)
# GITHUB_TOKEN=your_github_token_here

# Rate Limiting
MAX_PAPERS_PER_BATCH=20
GEMINI_RATE_LIMIT_BATCH_SIZE=5
GEMINI_RATE_LIMIT_DELAY=2.0

# arXiv API Configuration
ARXIV_API_BASE_URL=http://export.arxiv.org/api/query
ARXIV_MAX_RESULTS=10

# CORS Configuration (comma-separated origins)
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
